"use strict";var t=require("mtg-decklist-parser2");function r(t,r){var e;let{entryHandler:s}=null!=r?r:{};return null!==(e=s)&&void 0!==e||(s=t=>t),t.reduce(((t,r)=>{let{amount:e,...i}=r,n=s(i);for(let r=0;r<e;r++)t.push(n);return t}),[])}function e(t,e){return r(t.deck,e)}function s(r){const e=Math.max(3,r.length.toString().length);return r.reduce(((r,s,i)=>(r.push(`${String(i).padStart(e,"0")} ${t.toCardStringWithoutAmount(s)}`),r)),[])}function i(t,r="\n"){return s(t).join(r)}exports.DeckLibrary=class{constructor(t,r){var s;(s="handSize")in this?Object.defineProperty(this,s,{value:7,enumerable:!0,configurable:!0,writable:!0}):this[s]=7,this.deck=t,this.cards=e(t,r)}get length(){return this.cards.length}shuffleStarting(){this._shuffleStarting=!0}shuffle(t){}drawStarting(t){return this._shuffleStarting||this.shuffleStarting(),this.shuffle(!0),this.draw(this.handSize,t)}draw(t=1,r){return r?this.cards.slice(0,t):this.cards.splice(0,t)}toList(){return s(this.cards)}toListString(t="\n"){return i(this.cards,t)}},exports.deckListToCardsArray=e,exports.default=e,exports.listToCardsArray=r,exports.toList=s,exports.toListString=i;
//# sourceMappingURL=index.cjs.production.min.js.map
