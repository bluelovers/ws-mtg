"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("mtg-decklist-parser2"),e=require("array-hyper-unique"),t=require("@lazy-mtg/group-card-type-by-scryfall-data"),n=require("scryfall-api");function i(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var l=i(require("bluebird"));function a(r){let e=r.trim().split(/—/).filter((r=>r.length));if(!e.length||e.length>2)throw new SyntaxError(`Invalid card type: ${r}`);return e.map((r=>r.trim().split(/\s+/).filter((r=>r.length))))}function o(r){var e;const t=r[0].join(" ");let n=null===(e=r[1])||void 0===e?void 0:e.filter((r=>r.length));return null!=n&&n.length?`${t} — ${n.join(" ")}`:t}function s(r){return r.split(/\s*\/\/\s*/).map(a)}function u(r){let t=r.reduce(((r,e)=>(r.push(...e[0]),r)),[]);return e.array_unique_overwrite(t)}const c=Symbol.for("raw-card");class ScryfallCardModel extends r.CardModel{constructor(r,e){var t;super({name:r.name,set:r.set.toUpperCase(),collectors:r.collector_number}),this.amount=e,this[c]=r,this.mtgoID=null===(t=r.mtgo_id)||void 0===t?void 0:t.toString(),this._init()}_init(){var r,e;this.rarity=this[c].rarity,this.mainTypes=u(s(this[c].type_line)),this.multiverseid=null===(r=this[c].multiverse_ids)||void 0===r||null===(e=r[0])||void 0===e?void 0:e.toString()}}class ScryfallDecklist extends r.AbstractDeck{constructor(e){var t,n;super(),n="scryfall",(t=r.SymDecklistType)in this?Object.defineProperty(this,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[t]=n,this.valid=!1,null!=e&&e.length&&(e.forEach((r=>{this.addByApiResult(r)})),this.valid=!0)}addByApiResult(r,e,t){var n;null!==(n=e)&&void 0!==n||(e="deck");const i=this._newCardModel(r,t);return"commander"===e||"companion"===e?this[e]=i:this[e].push(i),i}_newCardModel(r,e){const t=new ScryfallCardModel(r);return t.amount=null!=e?e:t.amount,t}}function d(r){var e,t;const n=p(r.deck);return r.commander&&n.Commander.push(r.commander),r.companion&&n.Companion.push(r.companion),null!==(e=r.sideboard)&&void 0!==e&&e.length&&n.Sideboard.push(...r.sideboard),null===(t=n.Land)||void 0===t||t.sort(((r,e)=>{let t=r.mainTypes.includes("Basic");return t!==e.mainTypes.includes("Basic")?t?-1:1:0})),n}function p(r){return r.reduce(((r,e)=>{var n;let i=t.groupKeyByCardTypePriority(e.mainTypes);return null!==(n=r[i])&&void 0!==n||(r[i]=[]),r[i].push(e),r}),{})}function y(e){const n=[];return t.GROUP_CARD_TYPE_DISPLAY_PRIORITY.forEach((t=>{let i=e[t];null!=i&&i.length&&(n.push(t),i.forEach((e=>{let t=r.toMtgifyCardString(e);n.push(t)})),n.push(""))})),n}function f(r){return y(r).join("\n")}function m(r){var e;return console.log("start",r.toCardString()),n.Cards.byName(r.name,null===(e=r.set)||void 0===e?void 0:e.toLowerCase())}exports.ScryfallCardModel=ScryfallCardModel,exports.ScryfallDecklist=ScryfallDecklist,exports.SymRaw=c,exports._queryCard=m,exports.arrayifyGroupRecord=y,exports.default=ScryfallDecklist,exports.getCardMainTypes=u,exports.groupScryfallCardList=p,exports.groupScryfallDecklist=d,exports.importByDecklist=async function(r,e){var t;null!==(t=e)&&void 0!==t||(e=new ScryfallDecklist);const n=(r,t,n)=>m(r).then((t=>{var i;return null===(i=e)||void 0===i?void 0:i.addByApiResult(t,"deck",null!=n?n:r.amount)}));return await l.default.mapSeries(["deck","sideboard"],(e=>l.default.mapSeries(r[e].slice(),(r=>r&&n(r,0,r.amount))))),await l.default.mapSeries(["companion","commander"],(e=>{const t=r[e];return t&&n(t,0,t.amount)})),e},exports.parseScryfallCardType=a,exports.parseScryfallCardTypeExtra=s,exports.stringifyGroupRecord=f,exports.stringifyScryfallCardType=o,exports.stringifyScryfallCardTypeExtra=function(r){return r.map(o).join(" // ")},exports.stringifyScryfallDecklist=function(r){return f(d(r))};
//# sourceMappingURL=index.cjs.production.min.cjs.map
